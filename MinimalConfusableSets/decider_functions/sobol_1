"""
Sobol Sampling Option 1
------------------------
Generates n k-dimensional unit vectors using the Sobol low-discrepancy sequence.
If n is a power of 2, it uses Sobol's random_base2 method.
Otherwise, it falls back to random(n), which may reduce balance.

"""

from scipy.stats import qmc
import numpy as np

def generate_sobol_1(m,k):
    sampler = qmc.Sobol(d=k, scramble = True)
    
    q = (np.log2(m))
    if q.is_integer():
        vectors = sampler.random_base2(int(q))
        
    else: 
        vectors = sampler.random(m)
        print("WARNING: Sobol balance only guaranteed for n a power of 2")

    norms = np.linalg.norm(vectors, axis=1, keepdims=True) 
    D = vectors / norms
    return(D)
